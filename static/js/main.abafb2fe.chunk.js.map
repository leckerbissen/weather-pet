{"version":3,"sources":["components/getIcon/getIcon.js","components/getSun/getSun.js","components/getWeather/search.js","components/footer/footer.js","components/getWeather/getWeather.js","components/dateBack/switchBack.js","App.js","reportWebVitals.js","index.js"],"names":["GetIcon","description","weatherIcon","react_default","a","createElement","iconify","className","icon","width","height","GetSunset","data","timeZone","timezone","localZone","Date","getTimezoneOffset","sunset","sys","sunrise","offset","sun","clearSun","map","element","time","tHour","getHours","console","log","indexOf","minutes","getMinutes","concat","toString","padStart","timeToString","convertData","Fragment","Search","_ref","onKeyPress","_useState","useState","_useState2","Object","slicedToArray","location","setLocation","type","placeholder","value","onChange","event","target","key","Footer","href","rel","GetWeather","onSubmit","setData","_useState3","_useState4","error","setError","searchLocation","axios","get","then","response","handleDt","catch","city","main","name","weather","Math","round","temp","feels_like","wind","speed","humidity","pressure","SwitchBack","hoursNow","dateDt","timeFormat","timezoneInMinutes","currTime","moment","utcOffset","format","dayTime","bodyClasses","document","body","classList","remove","add","addClasses","dateBack","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.abafb2fe.chunk.js","sourcesContent":["import { Icon } from '@iconify/react';\nimport React from 'react';\n\nexport default function GetIcon(description) {\n  let weatherIcon = \"\";\n\n  switch (description.description) {\n    case \"Clear\":\n      weatherIcon = \"mdi:weather-sunny\";\n      break;\n    case \"Snow\":\n      weatherIcon = \"mdi:weather-snowy\";\n      break;\n    case \"Rain\":\n      weatherIcon = \"mdi:weather-rainy\";\n      break;\n    case \"Clouds\":\n      weatherIcon = \"mdi:weather-cloudy\";\n      break;\n    case \"Thunderstorm\":\n      weatherIcon = \"mdi:weather-lightning\";\n      break;\n    case \"Drizzle\":\n      weatherIcon = \"mdi:weather-pouring\";\n      break;\n    default:\n      weatherIcon = \"mdi:weather-tornado\";\n  }\n\n  return (<Icon className=\"weather__svg\" icon={weatherIcon} width=\"140\" height=\"140\"/>)\n}\n","import React from \"react\";\n\nexport default function GetSunset(data) {\n  let timeZone = data.data.timezone / 3600;\n  let localZone = -(new Date().getTimezoneOffset() / 60);\n  let sunset = data.data.sys.sunset;\n  let sunrise = data.data.sys.sunrise;\n  let offset = data.data.timezone;\n  let sun = [sunset, sunrise];\n\n  let timeToString = (time, tHour) => {\n    const minutes = time.getMinutes();\n    const rightTime = `${tHour}:${padTo2Digits(minutes)}`;\n\n    function padTo2Digits(num) {\n      return num.toString().padStart(2, \"0\");\n    }\n\n    return rightTime;\n  };\n//tz < lz, tHour < 0\n  let convertData = (element) => {\n    let time = new Date(element * 1000);\n    let tHour = time.getHours();\n    console.log('zone: ' + timeZone)\n\n    switch (true) {\n      case (localZone > timeZone && timeZone > 0):\n        if (tHour === 0) {\n          tHour = 24 - (localZone - timeZone);\n        }\n        tHour = tHour - (localZone - timeZone);\n        break;\n      case (timeZone > localZone && timeZone !== 0):\n        if (tHour > 24) {\n          tHour = -(24 - tHour);\n        }\n        tHour = tHour + (timeZone - localZone);\n        break;\n      case (sun.indexOf(element) === 0 && localZone !== timeZone  && timeZone > 0):\n        time = new Date((element + offset) * 1000);\n        tHour = 24 - time.getHours() - localZone;\n        break;\n      case (timeZone === localZone):\n        break;\n        case ((timeZone-localZone) < 0 && sun.indexOf(element) === 0):\n          time = new Date((element + offset) * 1000);\n          tHour = time.getHours() - timeZone + (timeZone - localZone);\n          console.log('catch')\n          break;\n      default:\n        tHour = time.getHours() + (timeZone - localZone);\n        break;\n    }\n    if (tHour > 24) {\n      tHour = time.getHours() + (timeZone - localZone);\n      tHour = -(24 - tHour);\n    }\n    element = timeToString(time, tHour);\n    return element;\n  };\n\n  let clearSun = sun.map((element) => {\n    return convertData(element);\n  });\n\n  return (\n    <>\n      <div className=\"sunblock block\">\n          <p className=\"sunblock__set\"><span>{clearSun[0]}</span><br/>Закат</p>\n          <p className=\"sunblock__rise\"><span>{clearSun[1]}</span><br/>Восход</p>\n        </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Search({ onKeyPress }) {\n  const [location, setLocation] = useState(\"\");\n\n  let handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      onKeyPress(event.target.value);\n      setLocation(\"\");\n    }\n  };\n\n  return (\n      <input\n        className=\"search__input\"\n        type=\"text\"\n        placeholder=\"Введите город\"\n        value={location}\n        onChange={(event) => setLocation(event.target.value)}\n        onKeyPress={handleKeyPress}\n      />\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n      <>\n    <div className=\"footer\">\n      <div className=\"footer__api\">\n      <a className=\"footer__api-link\" href=\"https://openweathermap.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          OpenWeatherMap\n        </a>\n        <p className=\"footer__api-text\">Данные o погоде предоставлены</p>\n      </div>\n      <div className=\"footer__pics\">\n      <a\n          className=\"footer__pics-link\"\n          href=\"https://dynamicwallpaper.club/wallpaper/a9q1jiy0cu\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Dropside\n        </a>\n        <p className=\"footer__pics-text\">Источник фоновых изображений</p>\n      </div>\n      <div className=\"footer__author\">\n      <a\n          className=\"footer__author-link\"\n          href=\"https://t.me/leckerbissen\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @leckerbissen\n        </a>\n        <p className=\"footer__author-text\">Телеграмм разработчика Weather Pet</p>\n      </div>\n    </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport GetIcon from \"../getIcon/getIcon\";\nimport GetSunset from \"../getSun/getSun\";\nimport Search from \"./search\";\nimport Footer from \"../footer/footer\";\n\nexport default function GetWeather({ onSubmit }) {\n  const [data, setData] = useState({});\n  // const [errorText, setErrorText] = useState('');\n  const [error, setError] = useState(\"\");\n\n  const handleLocation = (location) => {\n    searchLocation(location);\n  };\n\n  const searchLocation = (location) => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&lang=ru&appid=03368a1a1112e7dde55d6fd84851269c`\n      )\n      .then((response) => {\n        setData(response.data);\n        handleDt(response.data);\n        setError(\"\");\n      })\n      .catch((error) => {\n        setError(error);\n        // setErrorText('Город не найден. Пожалуйста, попробуйте снова')\n      });\n  };\n\n  let handleDt = (data) => {\n    onSubmit(data.timezone);\n  };\n  return (\n    <>\n      <div className=\"header\">\n        Weather Pet — <i>portfolio project</i>\n      </div>\n      <div className=\"search\">\n        <Search onKeyPress={(city) => handleLocation(city)} />\n        {error ? <p>Город не найден. Пожалуйста, попробуйте снова</p> : null}\n      </div>\n      {data.main ? (\n        <div className=\"weather\">\n          <h1 className=\"weather__city\">{data.name}</h1>\n          <div className=\"weather__wrap\">\n            <GetIcon description={data.weather[0].main} />\n            <div className=\"weather__text\">\n              <p className=\"weather__text-temp\">\n                {Math.round(data.main.temp)}\n                <span>°C</span>\n              </p>\n              <p className=\"weather__text-desc\">\n                {data.weather[0].description}\n              </p>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {data.main ? (\n        <div className=\"weather__extra\">\n          <div className=\"weather__extra-first\">\n            <p>\n              <span>{Math.round(data.main.feels_like)}<span className=\"sign\">°C</span></span><br/>\n              Ощущается как\n            </p>\n            <p>\n              <span>{data.wind.speed}<span className=\"sign\">м/с</span></span><br/>\n              Скорость ветра</p>\n          </div>\n          <div className=\"weather__extra-second\">\n            <p>\n              <span>{data.main.humidity}<span className=\"sign\">%</span></span><br/>\n              Влажность</p>\n            <p><span>{Math.round(data.main.pressure * 0.75)}<span className=\"sign\">мрт</span></span><br/>\n              Давление</p>\n          </div>\n          {data.main ? <GetSunset data={data} /> : null}\n        </div>\n      ) : null}\n      <Footer />\n    </>\n  );\n}\n","import moment from \"moment\";\n\nexport default function SwitchBack({ dateDt }) {\n\n  let hoursNow;\n\n  let dayTime;\n\n  let addClasses = (dayTime) => {\n    let bodyClasses = document.body.classList;\n    if (bodyClasses[0] !== dayTime) {\n      bodyClasses.remove(document.body.classList[0]);\n    }\n    bodyClasses.add(`${dayTime}`);\n  };\n\n  let convertData = (timeFormat) => {\n    const timezoneInMinutes = timeFormat / 60;\n    const currTime = moment()\n      .utcOffset(timezoneInMinutes)\n      .format(\"HH\");\n\n    return (hoursNow = currTime);\n  };\n\n  let dateBack = () => {\n    convertData(dateDt);\n    let hours = hoursNow;\n    if (hours >= 5 && hours < 12) {\n      dayTime = \"morning\";\n    } else if (hours >= 12 && hours < 18) {\n      dayTime = \"afternoon\";\n    } else if (hours >= 18 && hours < 24) {\n      dayTime = \"evening\";\n    } else {\n      dayTime = \"night\";\n    }\n\n    addClasses(dayTime)\n  };\n  dateBack();\n}\n","import \"./App.css\";\nimport GetWeather from \"./components/getWeather/getWeather\";\nimport SwitchBack from \"./components/dateBack/switchBack\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [dateDt, setData] = useState();\n\n  let handleData = (data) => {\n    setData(data);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n        <SwitchBack dateDt={dateDt}/>\n        <GetWeather onSubmit={handleData}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}